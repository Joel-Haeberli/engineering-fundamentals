name: Build and Push Docker Image

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
      - closed
  push:
    branches:
      - main

jobs:
  code-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # SonarCloud needs the full history

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Provided by GitHub Actions
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=cyber-moon_temp-engineering-fundamentals-fork
            -Dsonar.organization=cyber-moon
            -Dsonar.sources=.

  publish-docker-image:
    needs: code-analysis
    # This job runs ONLY when a pull request targeting 'main' is merged.
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          # Fetch all tags to determine the next version
          fetch-tags: true
          token: ${{ secrets.GITHUB_TOKEN }} 

      - name: Log in to Azure Container Registry
        run: |
          # Quick hack for ACR login
          echo "${{ secrets.ACR_PASSWORD }}" | docker login lrengineering.azurecr.io -u LREngineering --password-stdin

      - name: Generate and Push Git Tag for New Version
        id: versioning
        run: |
          # Get the latest semantic version tag
          git fetch origin --tags
          LATEST_TAG=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)

          # If no tags exist, start with v0.0.1
          if [ -z "$LATEST_TAG" ]; then
            NEW_VERSION="0.0.1"
          else
            # Remove 'v' prefix for version calculation
            BASE_VERSION="${LATEST_TAG#v}"
            # Increment the patch version
            IFS='.' read -r major minor patch <<< "$BASE_VERSION"
            NEW_VERSION="${major}.${minor}.$((patch + 1))"
          fi

          FULL_TAG="v$NEW_VERSION"

          echo "Determined new version: $FULL_TAG"
          echo "FULL_TAG=$FULL_TAG" >> $GITHUB_ENV

          # Create the new Git tag
          git tag "$FULL_TAG"

          # Push the new Git tag to the remote repository
          git push origin "$FULL_TAG"

      - name: Build the Docker image
        run: |
          docker build -t lrengineering.azurecr.io/ipt-spins:${{ env.FULL_TAG }} -t lrengineering.azurecr.io/ipt-spins:latest .

      - name: Push the Docker image to ACR
        run: |
          docker push lrengineering.azurecr.io/ipt-spins:${{ env.FULL_TAG }}
          docker push lrengineering.azurecr.io/ipt-spins:latest
